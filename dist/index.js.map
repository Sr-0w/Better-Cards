{"version":3,"file":"index.js","sources":["../src/shared/utils.js","../src/cards/switch/const.js","../src/cards/switch/styles.js","../src/cards/switch/editor.js","../src/cards/switch/index.js","../src/index.js"],"sourcesContent":["// Helper for consistent logging\nexport const log = {\n  info: (...args) => console.info('[Better Cards]', ...args),\n  warn: (...args) => console.warn('[Better Cards]', ...args),\n  error: (...args) => console.error('[Better Cards]', ...args),\n};\n\n// Helper for common entity operations\nexport const entityUtils = {\n  isUnavailable: (stateObj) => !stateObj || stateObj.state === 'unavailable',\n  getName: (stateObj, config) => config.name || stateObj.attributes.friendly_name,\n  getIcon: (stateObj, config) => config.icon || stateObj.attributes.icon\n};\n\n// Error handling\nexport const throwError = (message) => {\n  throw new Error(`[Better Cards] ${message}`);\n};\n","export const CARD_VERSION = '1.0.0';\nexport const CARD_NAME = 'Better Switch Card';\nexport const DOMAINS = ['switch', 'light', 'input_boolean'];\n\nexport const DEFAULT_CONFIG = {\n  entity: '',\n  name: '',\n  icon: '',\n  animation_duration: 500,\n};","import { css } from 'lit';\n\nexport const styles = css`\n  :host {\n    display: block;\n    height: 100%;\n  }\n\n  ha-card {\n    height: 100%;\n  }\n\n  .toggle-button {\n    width: 100%;\n    height: 100%;\n    min-height: 48px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 16px;\n    transition: all var(--animation-duration, 500ms) ease-in-out;\n    border: none;\n    border-radius: var(--ha-card-border-radius, 12px);\n    cursor: pointer;\n    margin: 0;\n    background: var(--ha-card-background, #1c1c1e);\n    color: var(--primary-text-color, white);\n  }\n\n  .toggle-button.off {\n    background-color: var(--ha-card-background, #1c1c1e);\n    color: var(--primary-text-color, white);\n  }\n\n  .toggle-button.on {\n    background-color: white;\n    color: black;\n  }\n\n  .toggle-text {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .room-name {\n    font-size: 1.15rem;\n    font-weight: 500;\n    margin-bottom: 4px;\n  }\n\n  .status {\n    font-size: 0.85rem;\n    opacity: 0.8;\n  }\n\n  .icon-container {\n    width: 42px;\n    height: 42px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: all var(--animation-duration, 500ms);\n  }\n\n  .off .icon-container {\n    background-color: white;\n    color: var(--ha-card-background, #1c1c1e);\n  }\n\n  .on .icon-container {\n    background-color: var(--ha-card-background, #1c1c1e);\n    color: white;\n  }\n\n  .warning {\n    display: block;\n    color: var(--error-color);\n    padding: 16px;\n  }\n\n  ha-icon {\n    --mdc-icon-size: 24px;\n  }\n`;","import { html, nothing } from \"lit\";\nimport { fireEvent } from \"custom-card-helpers\";\n\nclass BetterSwitchCardEditor extends HTMLElement {\n  constructor() {\n    super();\n    this._config = {};\n  }\n\n  setConfig(config) {\n    this._config = config;\n  }\n\n  _computeLabel(schema) {\n    const labels = {\n      entity: \"Entity (Required)\",\n      name: \"Name (Optional)\",\n      icon: \"Icon\",\n      animation_duration: \"Animation Duration (ms)\",\n    };\n    return labels[schema.name] || schema.name;\n  }\n\n  render() {\n    if (!this.hass || !this._config) {\n      return nothing;\n    }\n\n    const schema = [\n      { name: \"entity\", selector: { entity: { domain: [\"switch\", \"light\", \"input_boolean\"] } } },\n      { name: \"name\", selector: { text: {} } },\n      { name: \"icon\", selector: { icon: {} } },\n      { name: \"animation_duration\", selector: { number: { mode: \"box\", min: 100, step: 100 } } },\n    ];\n\n    return html`\n      <ha-form\n        .hass=${this.hass}\n        .data=${this._config}\n        .schema=${schema}\n        .computeLabel=${this._computeLabel}\n        @value-changed=${this._valueChanged}\n      ></ha-form>\n    `;\n  }\n\n  _valueChanged(ev) {\n    fireEvent(this, \"config-changed\", { config: ev.detail.value });\n  }\n}\n\ncustomElements.define(\"better-switch-card-editor\", BetterSwitchCardEditor);\n\nexport default BetterSwitchCardEditor;","import { LitElement, html } from 'lit';\nimport { DEFAULT_CONFIG, CARD_VERSION, CARD_NAME } from './const';\nimport { styles } from './styles';\nimport './editor';\nimport { log } from '../../shared/utils';\n\nlog.info(\n  `%c ${CARD_NAME} %c ${CARD_VERSION} `,\n  'color: white; background: #555; font-weight: 700;',\n  'color: white; background: #000; font-weight: 700;',\n);\n\nwindow.customCards = window.customCards || [];\nwindow.customCards.push({\n  type: \"better-switch-card\",\n  name: CARD_NAME,\n  description: \"A stylish switch card with animations\",\n  preview: true,\n});\n\nclass BetterSwitchCard extends LitElement {\n  static get properties() {\n    return {\n      hass: { type: Object },\n      config: { type: Object },\n    };\n  }\n\n  static get styles() {\n    return styles;\n  }\n\n  static getConfigElement() {\n    return document.createElement(\"better-switch-card-editor\");\n  }\n\n  static getStubConfig() {\n    return DEFAULT_CONFIG;\n  }\n\n  setConfig(config) {\n    if (!config.entity) {\n      throw new Error(\"Please define an entity\");\n    }\n    this.config = { ...DEFAULT_CONFIG, ...config };\n  }\n\n  _toggle(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    \n    const stateObj = this.hass.states[this.config.entity];\n    if (!stateObj) return;\n\n    const service = stateObj.state === 'on' ? 'turn_off' : 'turn_on';\n    const [domain] = this.config.entity.split('.');\n    \n    this.hass.callService(domain, service, {\n      entity_id: this.config.entity,\n    });\n  }\n\n  render() {\n    if (!this.hass || !this.config) {\n      return html``;\n    }\n\n    const stateObj = this.hass.states[this.config.entity];\n    if (!stateObj) {\n      return html`\n        <ha-card>\n          <div class=\"warning\">\n            Entity not found: ${this.config.entity}\n          </div>\n        </ha-card>\n      `;\n    }\n\n    const isOn = stateObj.state === 'on';\n    const name = this.config.name || stateObj.attributes.friendly_name;\n    const icon = this.config.icon || \n                (isOn ? 'mdi:toggle-switch' : 'mdi:toggle-switch-off');\n\n    return html`\n      <ha-card>\n        <button \n          class=\"toggle-button ${isOn ? 'on' : 'off'}\"\n          @click=\"${this._toggle}\"\n          type=\"button\"\n        >\n          <div class=\"toggle-text\">\n            <span class=\"room-name\">${name}</span>\n            <span class=\"status\">${isOn ? 'On' : 'Off'}</span>\n          </div>\n          <div class=\"icon-container\">\n            <ha-icon .icon=${icon}></ha-icon>\n          </div>\n        </button>\n      </ha-card>\n    `;\n  }\n}\n\ncustomElements.define('better-switch-card', BetterSwitchCard);\n\nexport default BetterSwitchCard;","import { log } from './shared/utils';\nimport './cards/switch';\n\nlog.info('Better Cards loaded');"],"names":["log","args","console","info","CARD_NAME","DEFAULT_CONFIG","entity","name","icon","animation_duration","styles","css","BetterSwitchCardEditor","HTMLElement","constructor","super","this","_config","setConfig","config","_computeLabel","schema","render","hass","nothing","html","selector","domain","text","number","mode","min","step","_valueChanged","ev","fireEvent","detail","value","customElements","define","window","customCards","push","type","description","preview","LitElement","properties","Object","getConfigElement","document","createElement","getStubConfig","Error","_toggle","e","stopPropagation","preventDefault","stateObj","states","service","state","split","callService","entity_id","isOn","attributes","friendly_name"],"mappings":"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"}