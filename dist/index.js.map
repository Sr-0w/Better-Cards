{"version":3,"file":"index.js","sources":["../src/shared/utils.js","../src/cards/switch/const.js","../src/cards/switch/styles.js","../src/cards/switch/editor.js","../src/cards/switch/index.js","../src/index.js"],"sourcesContent":["// Helper for consistent logging\nexport const log = {\n  info: (...args) => console.info('[Better Cards]', ...args),\n  warn: (...args) => console.warn('[Better Cards]', ...args),\n  error: (...args) => console.error('[Better Cards]', ...args),\n};\n\n// Helper for common entity operations\nexport const entityUtils = {\n  isUnavailable: (stateObj) => !stateObj || stateObj.state === 'unavailable',\n  getName: (stateObj, config) => config.name || stateObj.attributes.friendly_name,\n  getIcon: (stateObj, config) => config.icon || stateObj.attributes.icon\n};\n\n// Error handling\nexport const throwError = (message) => {\n  throw new Error(`[Better Cards] ${message}`);\n};\n","export const CARD_VERSION = '1.0.0';\nexport const CARD_NAME = 'Better Switch Card';\nexport const DOMAINS = ['switch', 'light', 'input_boolean'];\n\nexport const DEFAULT_CONFIG = {\n  entity: '',\n  name: '',\n  icon: '',\n  animation_duration: 500,\n};","import { css } from 'lit';\n\nexport const styles = css`\n  :host {\n    display: block;\n    height: 100%;\n  }\n\n  ha-card {\n    height: 100%;\n  }\n\n  .toggle-button {\n    width: 100%;\n    height: 100%;\n    min-height: 48px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 16px;\n    transition: all var(--animation-duration, 500ms) ease-in-out;\n    border: none;\n    border-radius: var(--ha-card-border-radius, 12px);\n    cursor: pointer;\n    margin: 0;\n    background: var(--ha-card-background, #1c1c1e);\n    color: var(--primary-text-color, white);\n  }\n\n  .toggle-button.off {\n    background-color: var(--ha-card-background, #1c1c1e);\n    color: var(--primary-text-color, white);\n  }\n\n  .toggle-button.on {\n    background-color: white;\n    color: black;\n  }\n\n  .toggle-text {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .room-name {\n    font-size: 1.15rem;\n    font-weight: 500;\n    margin-bottom: 4px;\n  }\n\n  .status {\n    font-size: 0.85rem;\n    opacity: 0.8;\n  }\n\n  .icon-container {\n    width: 42px;\n    height: 42px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: all var(--animation-duration, 500ms);\n  }\n\n  .off .icon-container {\n    background-color: white;\n    color: var(--ha-card-background, #1c1c1e);\n  }\n\n  .on .icon-container {\n    background-color: var(--ha-card-background, #1c1c1e);\n    color: white;\n  }\n\n  .warning {\n    display: block;\n    color: var(--error-color);\n    padding: 16px;\n  }\n\n  ha-icon {\n    --mdc-icon-size: 24px;\n  }\n`;","// editor.js\nimport { LitElement, html, css } from 'lit';\nimport { fireEvent, createThing } from 'custom-card-helpers';\nimport { DOMAINS } from './const';\n\nexport class BetterSwitchCardEditor extends LitElement {\n  static get properties() {\n    return {\n      hass: { type: Object },\n      _config: { type: Object },\n    };\n  }\n\n  setConfig(config) {\n    this._config = { ...config };\n  }\n\n  firstUpdated() {\n    // Ensure all custom elements are loaded\n    customElements.whenDefined('ha-entity-picker').then(() => {\n      this.requestUpdate();\n    });\n  }\n\n  get _entity() {\n    return this._config?.entity || '';\n  }\n\n  get _name() {\n    return this._config?.name || '';\n  }\n\n  get _icon() {\n    return this._config?.icon || '';\n  }\n\n  get _animation_duration() {\n    return this._config?.animation_duration || 500;\n  }\n\n  valueChanged(ev) {\n    if (!this._config || !this.hass) return;\n\n    const target = ev.target;\n    const value = ev.detail?.value ?? target.value;\n    const configValue = target.configValue;\n    \n    if (!configValue) return;\n\n    let newConfig = {\n      ...this._config,\n      [configValue]: value\n    };\n\n    if (configValue === 'animation_duration') {\n      newConfig[configValue] = parseInt(value, 10) || 500;\n    }\n\n    fireEvent(this, 'config-changed', { config: newConfig });\n  }\n\n  render() {\n    if (!this._config || !this.hass) {\n      return html``;\n    }\n\n    return html`\n      <div class=\"card-config\">\n        <div class=\"side-by-side\">\n          <ha-entity-picker\n            .hass=${this.hass}\n            .value=${this._entity}\n            .configValue=${\"entity\"}\n            .includeDomains=${DOMAINS}\n            @value-changed=${this.valueChanged}\n            allow-custom-entity\n          ></ha-entity-picker>\n        </div>\n\n        <div class=\"side-by-side\">\n          <ha-textfield\n            label=\"Name\"\n            .value=${this._name}\n            .configValue=${\"name\"}\n            @input=${this.valueChanged}\n          ></ha-textfield>\n          \n          <ha-icon-picker\n            label=\"Icon\"\n            .value=${this._icon}\n            .configValue=${\"icon\"}\n            @value-changed=${this.valueChanged}\n          ></ha-icon-picker>\n        </div>\n\n        <div class=\"side-by-side\">\n          <ha-textfield\n            label=\"Animation Duration (ms)\"\n            type=\"number\"\n            min=\"100\"\n            step=\"100\"\n            .value=${this._animation_duration}\n            .configValue=${\"animation_duration\"}\n            @input=${this.valueChanged}\n          ></ha-textfield>\n        </div>\n      </div>\n    `;\n  }\n\n  static get styles() {\n    return css`\n      .card-config {\n        padding: 16px;\n      }\n      .side-by-side {\n        display: flex;\n        align-items: center;\n        gap: 8px;\n        margin: 8px 0;\n      }\n      ha-entity-picker,\n      ha-textfield {\n        width: 100%;\n      }\n    `;\n  }\n}\n\ncustomElements.define('better-switch-card-editor', BetterSwitchCardEditor);","// index.js\nimport { LitElement, html } from 'lit';\nimport { DEFAULT_CONFIG, CARD_VERSION, CARD_NAME } from './const';\nimport { styles } from './styles';\nimport './editor';\n\nconsole.info(\n  `%c ${CARD_NAME} %c ${CARD_VERSION} `,\n  'color: white; background: #555; font-weight: 700;',\n  'color: white; background: #000; font-weight: 700;',\n);\n\nwindow.customCards = window.customCards || [];\nwindow.customCards.push({\n  type: \"better-switch-card\",\n  name: CARD_NAME,\n  description: \"A stylish switch card with animations\",\n  preview: true\n});\n\nclass BetterSwitchCard extends LitElement {\n  static get properties() {\n    return {\n      hass: { type: Object },\n      config: { type: Object },\n    };\n  }\n\n  static get styles() {\n    return styles;\n  }\n\n  static async getConfigElement() {\n    await import('./editor');\n    return document.createElement(\"better-switch-card-editor\");\n  }\n\n  static getStubConfig() {\n    return {\n      entity: \"\",\n      name: \"\",\n      icon: \"\",\n      animation_duration: 500,\n    };\n  }\n\n  setConfig(config) {\n    if (!config.entity) {\n      throw new Error(\"Please define an entity\");\n    }\n    this.config = { ...DEFAULT_CONFIG, ...config };\n  }\n\n  _toggle(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    \n    const stateObj = this.hass.states[this.config.entity];\n    if (!stateObj) return;\n\n    const service = stateObj.state === 'on' ? 'turn_off' : 'turn_on';\n    const [domain] = this.config.entity.split('.');\n    \n    this.hass.callService(domain, service, {\n      entity_id: this.config.entity,\n    });\n  }\n\n  render() {\n    if (!this.hass || !this.config) {\n      return html``;\n    }\n\n    const stateObj = this.hass.states[this.config.entity];\n    if (!stateObj) {\n      return html`\n        <ha-card>\n          <div class=\"warning\">\n            Entity not found: ${this.config.entity}\n          </div>\n        </ha-card>\n      `;\n    }\n\n    const isOn = stateObj.state === 'on';\n    const name = this.config.name || stateObj.attributes.friendly_name;\n    const icon = this.config.icon || \n                (isOn ? 'mdi:toggle-switch' : 'mdi:toggle-switch-off');\n\n    return html`\n      <ha-card>\n        <button \n          class=\"toggle-button ${isOn ? 'on' : 'off'}\"\n          @click=\"${this._toggle}\"\n          type=\"button\"\n          style=\"--animation-duration: ${this.config.animation_duration}ms\"\n        >\n          <div class=\"toggle-text\">\n            <span class=\"room-name\">${name}</span>\n            <span class=\"status\">${isOn ? 'On' : 'Off'}</span>\n          </div>\n          <div class=\"icon-container\">\n            <ha-icon .icon=${icon}></ha-icon>\n          </div>\n        </button>\n      </ha-card>\n    `;\n  }\n}\n\ncustomElements.define('better-switch-card', BetterSwitchCard);\n\nexport default BetterSwitchCard;","import { log } from './shared/utils';\nimport './cards/switch';\n\nlog.info('Better Cards loaded');"],"names":["log","_len","arguments","length","args","Array","_key","console","info","CARD_NAME","DOMAINS","DEFAULT_CONFIG","entity","name","icon","animation_duration","styles","css","_templateObject","_taggedTemplateLiteral","BetterSwitchCardEditor","LitElement","properties","hass","type","Object","_config","setConfig","config","this","_objectSpread","firstUpdated","customElements","whenDefined","then","requestUpdate","_entity","_this$_config","_name","_this$_config2","_icon","_this$_config3","_animation_duration","_this$_config4","valueChanged","ev","_ev$detail$value","_ev$detail","target","value","detail","configValue","newConfig","parseInt","fireEvent","render","html","_templateObject2","_templateObject3","define","concat","window","customCards","push","description","preview","getConfigElement","Promise","document","createElement","getStubConfig","Error","_toggle","e","stopPropagation","preventDefault","stateObj","states","service","state","domain","split","callService","entity_id","isOn","attributes","friendly_name"],"mappings":"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"}