{"version":3,"file":"index.js","sources":["../src/shared/utils.js","../src/cards/switch/const.js","../src/cards/switch/styles.js","../src/cards/switch/editor.js","../src/cards/switch/index.js","../src/index.js"],"sourcesContent":["// Helper for consistent logging\nexport const log = {\n  info: (...args) => console.info('[Better Cards]', ...args),\n  warn: (...args) => console.warn('[Better Cards]', ...args),\n  error: (...args) => console.error('[Better Cards]', ...args),\n};\n\n// Helper for common entity operations\nexport const entityUtils = {\n  isUnavailable: (stateObj) => !stateObj || stateObj.state === 'unavailable',\n  getName: (stateObj, config) => config.name || stateObj.attributes.friendly_name,\n  getIcon: (stateObj, config) => config.icon || stateObj.attributes.icon\n};\n\n// Error handling\nexport const throwError = (message) => {\n  throw new Error(`[Better Cards] ${message}`);\n};\n","export const CARD_VERSION = '1.0.0';\nexport const CARD_NAME = 'Better Switch Card';\nexport const DOMAINS = ['switch', 'light', 'input_boolean'];\n\nexport const DEFAULT_CONFIG = {\n  entity: '',\n  name: '',\n  icon: '',\n  animation_duration: 500,\n};","import { css } from 'lit';\n\nexport const styles = css`\n  :host {\n    display: block;\n    height: 100%;\n  }\n\n  ha-card {\n    height: 100%;\n  }\n\n  .toggle-button {\n    width: 100%;\n    height: 100%;\n    min-height: 48px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 16px;\n    transition: all var(--animation-duration, 500ms) ease-in-out;\n    border: none;\n    border-radius: var(--ha-card-border-radius, 12px);\n    cursor: pointer;\n    margin: 0;\n    background: var(--ha-card-background, #1c1c1e);\n    color: var(--primary-text-color, white);\n  }\n\n  .toggle-button.off {\n    background-color: var(--ha-card-background, #1c1c1e);\n    color: var(--primary-text-color, white);\n  }\n\n  .toggle-button.on {\n    background-color: white;\n    color: black;\n  }\n\n  .toggle-text {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .room-name {\n    font-size: 1.15rem;\n    font-weight: 500;\n    margin-bottom: 4px;\n  }\n\n  .status {\n    font-size: 0.85rem;\n    opacity: 0.8;\n  }\n\n  .icon-container {\n    width: 42px;\n    height: 42px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: all var(--animation-duration, 500ms);\n  }\n\n  .off .icon-container {\n    background-color: white;\n    color: var(--ha-card-background, #1c1c1e);\n  }\n\n  .on .icon-container {\n    background-color: var(--ha-card-background, #1c1c1e);\n    color: white;\n  }\n\n  .warning {\n    display: block;\n    color: var(--error-color);\n    padding: 16px;\n  }\n\n  ha-icon {\n    --mdc-icon-size: 24px;\n  }\n`;","import { LitElement, html, css } from 'lit';\nimport { fireEvent } from 'custom-card-helpers';\nimport { DOMAINS } from './const';\n\nexport class BetterSwitchCardEditor extends LitElement {\n  static get styles() {\n    return css`\n      .card-config {\n        padding: 16px;\n      }\n      .editor-side-by-side {\n        display: flex;\n        margin: 8px 0;\n      }\n      .editor-side-by-side > * {\n        flex: 1;\n        padding-right: 4px;\n      }\n      .editor-label {\n        margin-left: 6px;\n        font-size: 0.8em;\n        opacity: 0.75;\n      }\n      paper-input {\n        width: 100%;\n      }\n      select {\n        width: 100%;\n        height: 40px;\n        padding: 8px;\n        border-radius: 4px;\n        background: var(--card-background-color, white);\n        border: 1px solid var(--divider-color, #e0e0e0);\n        color: var(--primary-text-color);\n        font-size: 16px;\n      }\n      .select-container {\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n      }\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: { type: Object },\n      _config: { type: Object },\n    };\n  }\n\n  setConfig(config) {\n    this._config = { ...config };\n  }\n\n  get _entity() {\n    return this._config.entity || '';\n  }\n\n  get _name() {\n    return this._config.name || '';\n  }\n\n  get _icon() {\n    return this._config.icon || '';\n  }\n\n  get _animation_duration() {\n    return this._config.animation_duration || 500;\n  }\n\n  get getEntitiesInDomain() {\n    return Object.keys(this.hass.states).filter(\n      eid => DOMAINS.includes(eid.split('.')[0])\n    );\n  }\n\n  valueChanged(ev) {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    \n    const target = ev.target;\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n\n    let newValue = target.value;\n    if (target.configValue === 'animation_duration') {\n      newValue = parseInt(newValue, 10);\n    }\n\n    if (newValue === '') {\n      delete this._config[target.configValue];\n    } else {\n      this._config = {\n        ...this._config,\n        [target.configValue]: newValue\n      };\n    }\n    \n    fireEvent(this, 'config-changed', { config: this._config });\n  }\n\n  render() {\n    if (!this.hass || !this._config) {\n      return html``;\n    }\n\n    const entities = this.getEntitiesInDomain;\n\n    return html`\n      <div class=\"card-config\">\n        <div class=\"overall-config\">\n          <div class=\"editor-side-by-side\">\n            <div class=\"select-container\">\n              <span class=\"editor-label\">Entity (Required)</span>\n              <select\n                .value=${this._entity}\n                .configValue=${'entity'}\n                @change=${this.valueChanged}\n              >\n                <option value=\"\">Select entity</option>\n                ${entities.map(entity => html`\n                  <option value=${entity} ?selected=${entity === this._entity}>\n                    ${entity}\n                  </option>\n                `)}\n              </select>\n            </div>\n          </div>\n\n          <div class=\"editor-side-by-side\">\n            <paper-input\n              label=\"Name\"\n              .value=${this._name}\n              .configValue=${'name'}\n              @value-changed=${this.valueChanged}\n            ></paper-input>\n\n            <paper-input\n              label=\"Icon\"\n              .value=${this._icon}\n              .configValue=${'icon'}\n              @value-changed=${this.valueChanged}\n            ></paper-input>\n          </div>\n\n          <div class=\"editor-side-by-side\">\n            <paper-input\n              label=\"Animation Duration (ms)\"\n              type=\"number\"\n              min=\"100\"\n              step=\"100\"\n              .value=${this._animation_duration}\n              .configValue=${'animation_duration'}\n              @value-changed=${this.valueChanged}\n            ></paper-input>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define('better-switch-card-editor', BetterSwitchCardEditor);","import { LitElement, html } from 'lit';\nimport { DEFAULT_CONFIG, CARD_VERSION, CARD_NAME } from './const';\nimport { styles } from './styles';\nimport './editor';\nimport { log } from '../../shared/utils';\n\nlog.info(\n  `%c ${CARD_NAME} %c ${CARD_VERSION} `,\n  'color: white; background: #555; font-weight: 700;',\n  'color: white; background: #000; font-weight: 700;',\n);\n\nwindow.customCards = window.customCards || [];\nwindow.customCards.push({\n  type: \"better-switch-card\",\n  name: CARD_NAME,\n  description: \"A stylish switch card with animations\",\n  preview: true,\n});\n\nclass BetterSwitchCard extends LitElement {\n  static get properties() {\n    return {\n      hass: { type: Object },\n      config: { type: Object },\n    };\n  }\n\n  static get styles() {\n    return styles;\n  }\n\n  static getConfigElement() {\n    return document.createElement(\"better-switch-card-editor\");\n  }\n\n  static getStubConfig() {\n    return DEFAULT_CONFIG;\n  }\n\n  setConfig(config) {\n    if (!config.entity) {\n      throw new Error(\"Please define an entity\");\n    }\n    this.config = { ...DEFAULT_CONFIG, ...config };\n  }\n\n  _toggle(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    \n    const stateObj = this.hass.states[this.config.entity];\n    if (!stateObj) return;\n\n    const service = stateObj.state === 'on' ? 'turn_off' : 'turn_on';\n    const [domain] = this.config.entity.split('.');\n    \n    this.hass.callService(domain, service, {\n      entity_id: this.config.entity,\n    });\n  }\n\n  render() {\n    if (!this.hass || !this.config) {\n      return html``;\n    }\n\n    const stateObj = this.hass.states[this.config.entity];\n    if (!stateObj) {\n      return html`\n        <ha-card>\n          <div class=\"warning\">\n            Entity not found: ${this.config.entity}\n          </div>\n        </ha-card>\n      `;\n    }\n\n    const isOn = stateObj.state === 'on';\n    const name = this.config.name || stateObj.attributes.friendly_name;\n    const icon = this.config.icon || \n                (isOn ? 'mdi:toggle-switch' : 'mdi:toggle-switch-off');\n\n    return html`\n      <ha-card>\n        <button \n          class=\"toggle-button ${isOn ? 'on' : 'off'}\"\n          @click=\"${this._toggle}\"\n          type=\"button\"\n        >\n          <div class=\"toggle-text\">\n            <span class=\"room-name\">${name}</span>\n            <span class=\"status\">${isOn ? 'On' : 'Off'}</span>\n          </div>\n          <div class=\"icon-container\">\n            <ha-icon .icon=${icon}></ha-icon>\n          </div>\n        </button>\n      </ha-card>\n    `;\n  }\n}\n\ncustomElements.define('better-switch-card', BetterSwitchCard);\n\nexport default BetterSwitchCard;","import { log } from './shared/utils';\nimport './cards/switch';\n\nlog.info('Better Cards loaded');"],"names":["log","args","console","info","CARD_NAME","DOMAINS","DEFAULT_CONFIG","entity","name","icon","animation_duration","styles","css","customElements","define","LitElement","properties","hass","type","Object","_config","setConfig","config","this","_entity","_name","_icon","_animation_duration","getEntitiesInDomain","keys","states","filter","eid","includes","split","valueChanged","ev","target","configValue","value","newValue","parseInt","fireEvent","render","html","entities","map","window","customCards","push","description","preview","getConfigElement","document","createElement","getStubConfig","Error","_toggle","e","stopPropagation","preventDefault","stateObj","service","state","domain","callService","entity_id","isOn","attributes","friendly_name"],"mappings":"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"}