{"version":3,"file":"index.js","sources":["../src/shared/utils.js","../src/cards/switch/const.js","../src/cards/switch/styles.js","../src/cards/switch/editor.js","../src/cards/switch/index.js","../src/index.js"],"sourcesContent":["// Helper for consistent logging\nexport const log = {\n  info: (...args) => console.info('[Better Cards]', ...args),\n  warn: (...args) => console.warn('[Better Cards]', ...args),\n  error: (...args) => console.error('[Better Cards]', ...args),\n};\n\n// Helper for common entity operations\nexport const entityUtils = {\n  isUnavailable: (stateObj) => !stateObj || stateObj.state === 'unavailable',\n  getName: (stateObj, config) => config.name || stateObj.attributes.friendly_name,\n  getIcon: (stateObj, config) => config.icon || stateObj.attributes.icon\n};\n\n// Error handling\nexport const throwError = (message) => {\n  throw new Error(`[Better Cards] ${message}`);\n};\n","export const CARD_VERSION = '1.0.0';\nexport const CARD_NAME = 'Better Switch Card';\nexport const DOMAINS = ['switch', 'light', 'input_boolean'];\n\nexport const DEFAULT_CONFIG = {\n  entity: '',\n  name: '',\n  icon: '',\n  animation_duration: 500,\n};","import { css } from 'lit';\n\nexport const styles = css`\n  :host {\n    display: block;\n    height: 100%;\n  }\n\n  ha-card {\n    height: 100%;\n  }\n\n  .toggle-button {\n    width: 100%;\n    height: 100%;\n    min-height: 48px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 16px;\n    transition: all var(--animation-duration, 500ms) ease-in-out;\n    border: none;\n    border-radius: var(--ha-card-border-radius, 12px);\n    cursor: pointer;\n    margin: 0;\n    background: var(--ha-card-background, #1c1c1e);\n    color: var(--primary-text-color, white);\n  }\n\n  .toggle-button.off {\n    background-color: black;\n    color: var(--primary-text-color, white);\n  }\n\n  .toggle-button.on {\n    background-color: white;\n    color: black;\n  }\n\n  .toggle-text {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .room-name {\n    font-size: 1.15rem;\n    font-weight: 500;\n    margin-bottom: 4px;\n  }\n\n  .status {\n    font-size: 0.85rem;\n    opacity: 0.8;\n  }\n\n  .icon-container {\n    width: 42px;\n    height: 42px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: all var(--animation-duration, 500ms);\n  }\n\n  .off .icon-container {\n    background-color: white;\n    color: var(--ha-card-background, #1c1c1e);\n  }\n\n  .on .icon-container {\n    background-color: var(--ha-card-background, #1c1c1e);\n    color: white;\n  }\n\n  .warning {\n    display: block;\n    color: var(--error-color);\n    padding: 16px;\n  }\n\n  ha-icon {\n    --mdc-icon-size: 24px;\n  }\n`;","// editor.js\nimport { LitElement, html } from 'lit';\nimport { fireEvent } from 'custom-card-helpers';\nimport { DOMAINS } from './const';\n\nconst SCHEMA = [\n  { \n    name: \"entity\", \n    selector: { \n      entity: { domain: DOMAINS } \n    } \n  },\n  { \n    name: \"name\", \n    selector: { \n      text: {} \n    } \n  },\n  {\n    type: \"grid\",\n    name: \"\",\n    schema: [\n      { \n        name: \"icon\",\n        selector: { \n          icon: {} \n        }\n      }\n    ]\n  },\n  { \n    name: \"animation_duration\", \n    selector: { \n      number: {\n        min: 100,\n        step: 100,\n        mode: \"box\",\n        unit_of_measurement: \"ms\"\n      } \n    } \n  }\n];\n\nexport class BetterSwitchCardEditor extends LitElement {\n  static get properties() {\n    return {\n      hass: { type: Object },\n      _config: { type: Object },\n    };\n  }\n\n  setConfig(config) {\n    this._config = { ...config };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this._loadComponents();\n  }\n\n  async _loadComponents() {\n    if (customElements.get('ha-form')) return;\n    \n    await customElements.whenDefined('hui-action-editor');\n    const helpers = await window.loadCardHelpers();\n    if (helpers) await helpers.importMoreInfoControl(\"light\");\n  }\n\n  _valueChanged(ev) {\n    if (!this._config || !this.hass) return;\n    \n    const config = ev.detail.value;\n    fireEvent(this, 'config-changed', { config });\n  }\n\n  render() {\n    if (!this.hass || !this._config) {\n      return html``;\n    }\n\n    return html`\n      <ha-form\n        .hass=${this.hass}\n        .data=${this._config}\n        .schema=${SCHEMA}\n        .computeLabel=${(schema) => schema.name}\n        @value-changed=${this._valueChanged}\n      ></ha-form>\n    `;\n  }\n}\n\ncustomElements.define('better-switch-card-editor', BetterSwitchCardEditor);","// index.js\nimport { LitElement, html } from 'lit';\nimport { DEFAULT_CONFIG, CARD_VERSION, CARD_NAME } from './const';\nimport { styles } from './styles';\nimport './editor';\n\nconsole.info(\n  `%c ${CARD_NAME} %c ${CARD_VERSION} `,\n  'color: white; background: #555; font-weight: 700;',\n  'color: white; background: #000; font-weight: 700;',\n);\n\nwindow.customCards = window.customCards || [];\nwindow.customCards.push({\n  type: \"better-switch-card\",\n  name: CARD_NAME,\n  description: \"A stylish switch card with animations\",\n  preview: true\n});\n\nclass BetterSwitchCard extends LitElement {\n  static get properties() {\n    return {\n      hass: { type: Object },\n      config: { type: Object },\n    };\n  }\n\n  static get styles() {\n    return styles;\n  }\n\n  static async getConfigElement() {\n    await import('./editor');\n    return document.createElement(\"better-switch-card-editor\");\n  }\n\n  static getStubConfig() {\n    return {\n      entity: \"\",\n      name: \"\",\n      icon: \"\",\n      animation_duration: 500,\n    };\n  }\n\n  setConfig(config) {\n    if (!config.entity) {\n      throw new Error(\"Please define an entity\");\n    }\n    this.config = { ...DEFAULT_CONFIG, ...config };\n  }\n\n  _toggle(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    \n    const stateObj = this.hass.states[this.config.entity];\n    if (!stateObj) return;\n\n    const service = stateObj.state === 'on' ? 'turn_off' : 'turn_on';\n    const [domain] = this.config.entity.split('.');\n    \n    this.hass.callService(domain, service, {\n      entity_id: this.config.entity,\n    });\n  }\n\n  render() {\n    if (!this.hass || !this.config) {\n      return html``;\n    }\n\n    const stateObj = this.hass.states[this.config.entity];\n    if (!stateObj) {\n      return html`\n        <ha-card>\n          <div class=\"warning\">\n            Entity not found: ${this.config.entity}\n          </div>\n        </ha-card>\n      `;\n    }\n\n    const isOn = stateObj.state === 'on';\n    const name = this.config.name || stateObj.attributes.friendly_name;\n    const icon = this.config.icon || \n                (isOn ? 'mdi:toggle-switch' : 'mdi:toggle-switch-off');\n\n    return html`\n      <ha-card>\n        <button \n          class=\"toggle-button ${isOn ? 'on' : 'off'}\"\n          @click=\"${this._toggle}\"\n          type=\"button\"\n          style=\"--animation-duration: ${this.config.animation_duration}ms\"\n        >\n          <div class=\"toggle-text\">\n            <span class=\"room-name\">${name}</span>\n            <span class=\"status\">${isOn ? 'On' : 'Off'}</span>\n          </div>\n          <div class=\"icon-container\">\n            <ha-icon .icon=${icon}></ha-icon>\n          </div>\n        </button>\n      </ha-card>\n    `;\n  }\n}\n\ncustomElements.define('better-switch-card', BetterSwitchCard);\n\nexport default BetterSwitchCard;","import { log } from './shared/utils';\nimport './cards/switch';\n\nlog.info('Better Cards loaded');"],"names":["log","_len","arguments","length","args","Array","_key","console","info","CARD_NAME","DEFAULT_CONFIG","entity","name","icon","animation_duration","styles","css","_templateObject","_taggedTemplateLiteral","SCHEMA","selector","domain","text","type","schema","number","min","step","mode","unit_of_measurement","BetterSwitchCardEditor","LitElement","properties","hass","Object","_config","setConfig","config","this","_objectSpread","connectedCallback","super","_loadComponents","_asyncToGenerator","customElements","get","whenDefined","helpers","window","loadCardHelpers","importMoreInfoControl","_valueChanged","ev","detail","value","fireEvent","render","html","_templateObject2","define","concat","customCards","push","description","preview","getConfigElement","Promise","document","createElement","getStubConfig","Error","_toggle","e","stopPropagation","preventDefault","stateObj","states","service","state","split","callService","entity_id","isOn","attributes","friendly_name","_templateObject3"],"mappings":"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"}