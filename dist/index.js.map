{"version":3,"file":"index.js","sources":["../src/shared/utils.js","../src/cards/switch/const.js","../src/cards/switch/styles.js","../src/cards/switch/editor.js","../src/cards/switch/index.js","../src/index.js"],"sourcesContent":["// Helper for consistent logging\nexport const log = {\n  info: (...args) => console.info('[Better Cards]', ...args),\n  warn: (...args) => console.warn('[Better Cards]', ...args),\n  error: (...args) => console.error('[Better Cards]', ...args),\n};\n\n// Helper for common entity operations\nexport const entityUtils = {\n  isUnavailable: (stateObj) => !stateObj || stateObj.state === 'unavailable',\n  getName: (stateObj, config) => config.name || stateObj.attributes.friendly_name,\n  getIcon: (stateObj, config) => config.icon || stateObj.attributes.icon\n};\n\n// Error handling\nexport const throwError = (message) => {\n  throw new Error(`[Better Cards] ${message}`);\n};\n","export const CARD_VERSION = '1.0.0';\nexport const CARD_NAME = 'Better Switch Card';\nexport const DOMAINS = ['switch', 'light', 'input_boolean'];\n\nexport const DEFAULT_CONFIG = {\n  entity: '',\n  name: '',\n  icon: '',\n  animation_duration: 500,\n};","import { css } from 'lit';\n\nexport const styles = css`\n  :host {\n    display: block;\n    height: 100%;\n  }\n\n  ha-card {\n    height: 100%;\n  }\n\n  .toggle-button {\n    width: 100%;\n    height: 100%;\n    min-height: 48px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 16px;\n    transition: all var(--animation-duration, 500ms) ease-in-out;\n    border: none;\n    border-radius: var(--ha-card-border-radius, 12px);\n    cursor: pointer;\n    margin: 0;\n    background: var(--ha-card-background, #1c1c1e);\n    color: var(--primary-text-color, white);\n  }\n\n  .toggle-button.off {\n    background-color: var(--ha-card-background, #1c1c1e);\n    color: var(--primary-text-color, white);\n  }\n\n  .toggle-button.on {\n    background-color: white;\n    color: black;\n  }\n\n  .toggle-text {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .room-name {\n    font-size: 1.15rem;\n    font-weight: 500;\n    margin-bottom: 4px;\n  }\n\n  .status {\n    font-size: 0.85rem;\n    opacity: 0.8;\n  }\n\n  .icon-container {\n    width: 42px;\n    height: 42px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: all var(--animation-duration, 500ms);\n  }\n\n  .off .icon-container {\n    background-color: white;\n    color: var(--ha-card-background, #1c1c1e);\n  }\n\n  .on .icon-container {\n    background-color: var(--ha-card-background, #1c1c1e);\n    color: white;\n  }\n\n  .warning {\n    display: block;\n    color: var(--error-color);\n    padding: 16px;\n  }\n\n  ha-icon {\n    --mdc-icon-size: 24px;\n  }\n`;","// editor.js\nimport { LitElement, html, css } from 'lit';\nimport { DOMAINS } from './const';\n\n// Import required Home Assistant components\nawait import('https://unpkg.com/custom-card-helpers@1.9.0/dist/index.js?module');\nawait import('https://www.home-assistant.io/package/ha-entity-picker.js?type=module');\nawait import('https://www.home-assistant.io/package/ha-icon-picker.js?type=module');\n\nexport class BetterSwitchCardEditor extends LitElement {\n  static get properties() {\n    return {\n      hass: { type: Object },\n      _config: { type: Object },\n    };\n  }\n\n  setConfig(config) {\n    console.log('Editor setConfig called with:', config);\n    this._config = { ...config };\n  }\n\n  get _entity() {\n    console.log('Getting entity value:', this._config?.entity);\n    return this._config?.entity || '';\n  }\n\n  get _name() {\n    return this._config?.name || '';\n  }\n\n  get _icon() {\n    return this._config?.icon || '';\n  }\n\n  get _animation_duration() {\n    return this._config?.animation_duration || 500;\n  }\n\n  get getEntitiesInDomain() {\n    if (!this.hass) return [];\n    return Object.keys(this.hass.states).filter(\n      eid => DOMAINS.includes(eid.split('.')[0])\n    );\n  }\n\n  valueChanged(ev) {\n    console.log('Value changed event:', ev);\n    if (!this._config) return;\n\n    const target = ev.target;\n    const value = ev.detail?.value ?? target.value;\n    const configValue = target.configValue;\n    \n    console.log('Updating config:', { configValue, value });\n    \n    if (!configValue) return;\n\n    let newConfig = {\n      ...this._config,\n      [configValue]: value\n    };\n\n    if (configValue === 'animation_duration') {\n      newConfig[configValue] = parseInt(value, 10);\n    }\n\n    // Fire the config changed event\n    const event = new CustomEvent('config-changed', {\n      detail: { config: newConfig },\n      bubbles: true,\n      composed: true\n    });\n    console.log('Dispatching config-changed event:', event);\n    this.dispatchEvent(event);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    console.log('Editor connected');\n  }\n\n  firstUpdated() {\n    console.log('Editor first updated');\n  }\n\n  updated(changedProps) {\n    console.log('Editor updated:', changedProps);\n  }\n\n  render() {\n    console.log('Editor rendering with config:', this._config);\n    if (!this._config) {\n      return html``;\n    }\n\n    const entities = this.getEntitiesInDomain;\n\n    return html`\n      <div class=\"card-config\">\n        <div class=\"side-by-side\">\n          <ha-entity-picker\n            .label=\"Entity (Required)\"\n            .hass=${this.hass}\n            .value=${this._entity}\n            .configValue=${\"entity\"}\n            .includeDomains=${DOMAINS}\n            @value-changed=${this.valueChanged}\n          ></ha-entity-picker>\n        </div>\n\n        <div class=\"side-by-side\">\n          <paper-input\n            label=\"Name\"\n            .value=${this._name}\n            .configValue=${\"name\"}\n            @value-changed=${this.valueChanged}\n          ></paper-input>\n          \n          <ha-icon-picker\n            .label=\"Icon\"\n            .value=${this._icon}\n            .configValue=${\"icon\"}\n            @value-changed=${this.valueChanged}\n          ></ha-icon-picker>\n        </div>\n\n        <div class=\"side-by-side\">\n          <paper-input\n            label=\"Animation Duration (ms)\"\n            type=\"number\"\n            min=\"100\"\n            step=\"100\"\n            .value=${this._animation_duration}\n            .configValue=${\"animation_duration\"}\n            @value-changed=${this.valueChanged}\n          ></paper-input>\n        </div>\n      </div>\n    `;\n  }\n\n  static get styles() {\n    return css`\n      .card-config {\n        padding: 16px;\n      }\n      .side-by-side {\n        display: flex;\n        align-items: center;\n        gap: 8px;\n        margin: 8px 0;\n      }\n      ha-entity-picker {\n        width: 100%;\n      }\n      paper-input {\n        width: 100%;\n      }\n      paper-input[type=\"number\"] {\n        width: 100%;\n      }\n    `;\n  }\n}\n\ncustomElements.define('better-switch-card-editor', BetterSwitchCardEditor);","// index.js\nimport { LitElement, html } from 'lit';\nimport { DEFAULT_CONFIG, CARD_VERSION, CARD_NAME } from './const';\nimport { styles } from './styles';\nimport './editor';\n\nconsole.info(\n  `%c ${CARD_NAME} %c ${CARD_VERSION} `,\n  'color: white; background: #555; font-weight: 700;',\n  'color: white; background: #000; font-weight: 700;',\n);\n\nwindow.customCards = window.customCards || [];\nwindow.customCards.push({\n  type: \"better-switch-card\",\n  name: CARD_NAME,\n  description: \"A stylish switch card with animations\",\n  preview: true\n});\n\nclass BetterSwitchCard extends LitElement {\n  static get properties() {\n    return {\n      hass: { type: Object },\n      config: { type: Object },\n    };\n  }\n\n  static get styles() {\n    return styles;\n  }\n\n  static async getConfigElement() {\n    await import('./editor');\n    return document.createElement(\"better-switch-card-editor\");\n  }\n\n  static getStubConfig() {\n    return {\n      entity: \"\",\n      name: \"\",\n      icon: \"\",\n      animation_duration: 500,\n    };\n  }\n\n  setConfig(config) {\n    if (!config.entity) {\n      throw new Error(\"Please define an entity\");\n    }\n    this.config = { ...DEFAULT_CONFIG, ...config };\n  }\n\n  _toggle(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    \n    const stateObj = this.hass.states[this.config.entity];\n    if (!stateObj) return;\n\n    const service = stateObj.state === 'on' ? 'turn_off' : 'turn_on';\n    const [domain] = this.config.entity.split('.');\n    \n    this.hass.callService(domain, service, {\n      entity_id: this.config.entity,\n    });\n  }\n\n  render() {\n    if (!this.hass || !this.config) {\n      return html``;\n    }\n\n    const stateObj = this.hass.states[this.config.entity];\n    if (!stateObj) {\n      return html`\n        <ha-card>\n          <div class=\"warning\">\n            Entity not found: ${this.config.entity}\n          </div>\n        </ha-card>\n      `;\n    }\n\n    const isOn = stateObj.state === 'on';\n    const name = this.config.name || stateObj.attributes.friendly_name;\n    const icon = this.config.icon || \n                (isOn ? 'mdi:toggle-switch' : 'mdi:toggle-switch-off');\n\n    return html`\n      <ha-card>\n        <button \n          class=\"toggle-button ${isOn ? 'on' : 'off'}\"\n          @click=\"${this._toggle}\"\n          type=\"button\"\n          style=\"--animation-duration: ${this.config.animation_duration}ms\"\n        >\n          <div class=\"toggle-text\">\n            <span class=\"room-name\">${name}</span>\n            <span class=\"status\">${isOn ? 'On' : 'Off'}</span>\n          </div>\n          <div class=\"icon-container\">\n            <ha-icon .icon=${icon}></ha-icon>\n          </div>\n        </button>\n      </ha-card>\n    `;\n  }\n}\n\ncustomElements.define('better-switch-card', BetterSwitchCard);\n\nexport default BetterSwitchCard;","import { log } from './shared/utils';\nimport './cards/switch';\n\nlog.info('Better Cards loaded');"],"names":["log","args","console","info","CARD_NAME","DOMAINS","DEFAULT_CONFIG","entity","name","icon","animation_duration","styles","css","import","BetterSwitchCardEditor","LitElement","properties","hass","type","Object","_config","setConfig","config","this","_entity","_name","_icon","_animation_duration","getEntitiesInDomain","keys","states","filter","eid","includes","split","valueChanged","ev","target","value","detail","configValue","newConfig","parseInt","event","CustomEvent","bubbles","composed","dispatchEvent","connectedCallback","super","firstUpdated","updated","changedProps","render","html","customElements","define","window","customCards","push","description","preview","getConfigElement","Promise","document","createElement","getStubConfig","Error","_toggle","e","stopPropagation","preventDefault","stateObj","service","state","domain","callService","entity_id","isOn","attributes","friendly_name"],"mappings":"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"}