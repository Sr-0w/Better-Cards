{"version":3,"file":"index.js","sources":["../src/shared/utils.js","../src/cards/switch/const.js","../src/cards/switch/styles.js","../src/cards/switch/index.js","../src/index.js"],"sourcesContent":["// Helper for consistent logging\nexport const log = {\n  info: (...args) => console.info('[Better Cards]', ...args),\n  warn: (...args) => console.warn('[Better Cards]', ...args),\n  error: (...args) => console.error('[Better Cards]', ...args),\n};\n\n// Helper for common entity operations\nexport const entityUtils = {\n  isUnavailable: (stateObj) => !stateObj || stateObj.state === 'unavailable',\n  getName: (stateObj, config) => config.name || stateObj.attributes.friendly_name,\n  getIcon: (stateObj, config) => config.icon || stateObj.attributes.icon\n};\n\n// Error handling\nexport const throwError = (message) => {\n  throw new Error(`[Better Cards] ${message}`);\n};\n","// const.js\nexport const CARD_VERSION = '1.0.0';\nexport const CARD_NAME = 'Better Switch Card';\nexport const CARD_EDITOR_NAME = 'better-switch-card-editor';\nexport const DOMAINS = ['switch', 'light', 'input_boolean'];\n\nexport const DEFAULT_CONFIG = {\n    entity: '',\n    name: '',\n    icon: '',\n    animation_duration: 500,\n    show_name: true,\n    show_state: true,\n    show_animation: true,\n};\n","import { css } from 'lit';\n\nexport const styles = css`\n  :host {\n    display: block;\n    height: 100%;\n  }\n\n  ha-card {\n    height: 100%;\n  }\n\n  .toggle-button {\n    width: 100%;\n    height: 100%;\n    min-height: 48px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 16px;\n    transition: all var(--animation-duration, 500ms) ease-in-out;\n    border: none;\n    border-radius: var(--ha-card-border-radius, 12px);\n    cursor: pointer;\n    margin: 0;\n    background: var(--ha-card-background, #1c1c1e);\n    color: var(--primary-text-color, white);\n  }\n\n  .toggle-button.off {\n    background-color: black;\n    color: var(--primary-text-color, white);\n  }\n\n  .toggle-button.on {\n    background-color: white;\n    color: black;\n  }\n\n  .toggle-text {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .room-name {\n    font-size: 1.15rem;\n    font-weight: 500;\n    margin-bottom: 4px;\n  }\n\n  .status {\n    font-size: 0.85rem;\n    opacity: 0.8;\n  }\n\n  .icon-container {\n    width: 42px;\n    height: 42px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: all var(--animation-duration, 500ms);\n  }\n\n  .off .icon-container {\n    background-color: white;\n    color: var(--ha-card-background, #1c1c1e);\n  }\n\n  .on .icon-container {\n    background-color: var(--ha-card-background, #1c1c1e);\n    color: white;\n  }\n\n  .warning {\n    display: block;\n    color: var(--error-color);\n    padding: 16px;\n  }\n\n  ha-icon {\n    --mdc-icon-size: 24px;\n  }\n`;","// index.js\nimport { LitElement, html } from 'lit';\nimport { DEFAULT_CONFIG, CARD_VERSION, CARD_NAME } from './const';\nimport { styles } from './styles';\n\nconsole.info(\n  `%c ${CARD_NAME} %c ${CARD_VERSION} `,\n  'color: white; background: #555; font-weight: 700;',\n  'color: white; background: #000; font-weight: 700;',\n);\n\nwindow.customCards = window.customCards || [];\nwindow.customCards.push({\n  type: \"better-switch-card\",\n  name: CARD_NAME,\n  description: \"A stylish switch card with animations\",\n  preview: true,\n});\n\nclass BetterSwitchCard extends LitElement {\n  static get properties() {\n    return {\n      hass: { type: Object },\n      config: { type: Object },\n    };\n  }\n\n  static get styles() {\n    return styles;\n  }\n\n  static async getConfigElement() {\n    await import('./editor');\n    return document.createElement(\"better-switch-card-editor\");\n  }\n\n  static getStubConfig() {\n    return {\n      entity: \"\",\n      name: \"\",\n      icon: \"\",\n      animation_duration: 500,\n    };\n  }\n\n  setConfig(config) {\n    // Allow empty entity in the editor, but validate when card is actually used\n    if (this.hass && !config.entity) {\n      throw new Error(\"Please define an entity\");\n    }\n    this.config = { ...DEFAULT_CONFIG, ...config };\n  }\n\n  _toggle(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    \n    const stateObj = this.hass.states[this.config.entity];\n    if (!stateObj) return;\n\n    const service = stateObj.state === 'on' ? 'turn_off' : 'turn_on';\n    const [domain] = this.config.entity.split('.');\n    \n    this.hass.callService(domain, service, {\n      entity_id: this.config.entity,\n    });\n  }\n\n  render() {\n    if (!this.hass || !this.config) {\n      return html``;\n    }\n\n    // If we're in the editor (no entity selected yet), show a placeholder\n    if (!this.config.entity) {\n      return html`\n        <ha-card>\n          <div class=\"card-content\">\n            Please define an entity\n          </div>\n        </ha-card>\n      `;\n    }\n\n    const stateObj = this.hass.states[this.config.entity];\n    if (!stateObj) {\n      return html`\n        <ha-card>\n          <div class=\"warning\">\n            Entity not found: ${this.config.entity}\n          </div>\n        </ha-card>\n      `;\n    }\n\n    const isOn = stateObj.state === 'on';\n    const name = this.config.name || stateObj.attributes.friendly_name;\n    const icon = this.config.icon || \n                (isOn ? 'mdi:toggle-switch' : 'mdi:toggle-switch-off');\n\n    return html`\n      <ha-card>\n        <button \n          class=\"toggle-button ${isOn ? 'on' : 'off'}\"\n          @click=\"${this._toggle}\"\n          type=\"button\"\n          style=\"--animation-duration: ${this.config.animation_duration}ms\"\n        >\n          <div class=\"toggle-text\">\n            <span class=\"room-name\">${name}</span>\n            <span class=\"status\">${isOn ? 'On' : 'Off'}</span>\n          </div>\n          <div class=\"icon-container\">\n            <ha-icon .icon=${icon}></ha-icon>\n          </div>\n        </button>\n      </ha-card>\n    `;\n  }\n}\n\ncustomElements.define('better-switch-card', BetterSwitchCard);\n\nexport default BetterSwitchCard;\n","import { log } from './shared/utils';\nimport './cards/switch';\n\nlog.info('Better Cards loaded');"],"names":["log","_len","arguments","length","args","Array","_key","console","info","CARD_NAME","DOMAINS","DEFAULT_CONFIG","entity","name","icon","animation_duration","show_name","show_state","show_animation","styles","css","_templateObject","_taggedTemplateLiteral","concat","window","customCards","push","type","description","preview","customElements","define","LitElement","properties","hass","Object","config","getConfigElement","_asyncToGenerator","import","document","createElement","getStubConfig","setConfig","this","Error","_objectSpread","_toggle","e","stopPropagation","preventDefault","stateObj","states","service","state","domain","split","callService","entity_id","render","html","_templateObject2","_templateObject3","isOn","attributes","friendly_name","_templateObject4"],"mappings":"oDACO,IAAMA,EACL,WAAF,IAAA,IAAAC,EAAAC,UAAAC,OAAMC,EAAIC,IAAAA,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAJF,EAAIE,GAAAJ,UAAAI,GAAA,OAAKC,QAAQC,KAAK,oBAAqBJ,EAAK,46CCDrD,cACMK,EAAY,qBAEZC,EAAU,CAAC,SAAU,QAAS,iBAE9BC,EAAiB,CAC1BC,OAAQ,GACRC,KAAM,GACNC,KAAM,GACNC,mBAAoB,IACpBC,WAAW,EACXC,YAAY,EACZC,gBAAgB,GCXPC,EAASC,EAAGC,IAAAA,EAAAC,EAmFxB,CAAA,ukDChFDf,QAAQC,KAAIe,MAAAA,OACJd,EAAS,QAAAc,OFLW,QEKQ,KAClC,oDACA,qDAGFC,OAAOC,YAAcD,OAAOC,aAAe,GAC3CD,OAAOC,YAAYC,KAAK,CACtBC,KAAM,qBACNd,KAAMJ,EACNmB,YAAa,wCACbC,SAAS,IAyGXC,eAAeC,OAAO,qBAtGtB,cAA+BC,EAC7B,qBAAWC,GACT,MAAO,CACLC,KAAM,CAAEP,KAAMQ,QACdC,OAAQ,CAAET,KAAMQ,QAEpB,CAEA,iBAAWhB,GACT,OAAOA,CACT,CAEA,uBAAakB,GAAmB,OAAAC,GAAA,YAE9B,aADMC,OAAO,wBACNC,SAASC,cAAc,4BAA6B,GAF7BH,EAGhC,CAEA,oBAAOI,GACL,MAAO,CACL9B,OAAQ,GACRC,KAAM,GACNC,KAAM,GACNC,mBAAoB,IAExB,CAEA4B,SAAAA,CAAUP,GAER,GAAIQ,KAAKV,OAASE,EAAOxB,OACvB,MAAM,IAAIiC,MAAM,2BAElBD,KAAKR,OAAMU,EAAAA,EAAQnC,CAAAA,EAAAA,GAAmByB,EACxC,CAEAW,OAAAA,CAAQC,GACNA,EAAEC,kBACFD,EAAEE,iBAEF,IAAMC,EAAWP,KAAKV,KAAKkB,OAAOR,KAAKR,OAAOxB,QAC9C,GAAKuC,EAAL,CAEA,IAAME,EAA6B,OAAnBF,EAASG,MAAiB,WAAa,WAChDC,GAAUX,KAAKR,OAAOxB,OAAO4C,MAAM,KAE1CZ,KAAKV,KAAKuB,YAAYF,EAAQF,EAAS,CACrCK,UAAWd,KAAKR,OAAOxB,QANV,CAQjB,CAEA+C,MAAAA,GACE,IAAKf,KAAKV,OAASU,KAAKR,OACtB,OAAOwB,EAAIvC,IAAAA,EAAAC,EAAA,CAAA,OAIb,IAAKsB,KAAKR,OAAOxB,OACf,OAAOgD,EAAIC,IAAAA,EAAAvC,EAAA,CAAA,mJASb,IAAM6B,EAAWP,KAAKV,KAAKkB,OAAOR,KAAKR,OAAOxB,QAC9C,IAAKuC,EACH,OAAOS,EAAIE,IAAAA,EAAAxC,EAAA,CAAA,uFAAA,oDAGesB,KAAKR,OAAOxB,QAMxC,IAAMmD,EAA0B,OAAnBZ,EAASG,MAChBzC,EAAO+B,KAAKR,OAAOvB,MAAQsC,EAASa,WAAWC,cAC/CnD,EAAO8B,KAAKR,OAAOtB,OACZiD,EAAO,oBAAsB,yBAE1C,OAAOH,EAAIM,IAAAA,EAAA5C,EAGkByC,CAAAA,uEAAAA,wBAAAA,sEAAAA,4FAAAA,6CAAAA,iGAAAA,8EAAAA,EAAO,KAAO,MAC3BnB,KAAKG,QAEgBH,KAAKR,OAAOrB,mBAGfF,EACHkD,EAAO,KAAO,MAGpBjD,EAK3B,ICnHFd,EAAS"}