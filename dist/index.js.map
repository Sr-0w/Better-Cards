{"version":3,"file":"index.js","sources":["../src/shared/utils.js","../src/cards/switch/const.js","../src/cards/switch/styles.js","../src/cards/switch/editor.js","../src/cards/switch/index.js","../src/index.js"],"sourcesContent":["// Helper for consistent logging\nexport const log = {\n  info: (...args) => console.info('[Better Cards]', ...args),\n  warn: (...args) => console.warn('[Better Cards]', ...args),\n  error: (...args) => console.error('[Better Cards]', ...args),\n};\n\n// Helper for common entity operations\nexport const entityUtils = {\n  isUnavailable: (stateObj) => !stateObj || stateObj.state === 'unavailable',\n  getName: (stateObj, config) => config.name || stateObj.attributes.friendly_name,\n  getIcon: (stateObj, config) => config.icon || stateObj.attributes.icon\n};\n\n// Error handling\nexport const throwError = (message) => {\n  throw new Error(`[Better Cards] ${message}`);\n};\n","export const CARD_VERSION = '1.0.0';\nexport const CARD_NAME = 'Better Switch Card';\nexport const DOMAINS = ['switch', 'light', 'input_boolean'];\n\nexport const DEFAULT_CONFIG = {\n  entity: '',\n  name: '',\n  icon: '',\n  animation_duration: 500,\n};","import { css } from 'lit';\n\nexport const styles = css`\n  :host {\n    display: block;\n    height: 100%;\n  }\n\n  ha-card {\n    height: 100%;\n  }\n\n  .toggle-button {\n    width: 100%;\n    height: 100%;\n    min-height: 48px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 16px;\n    transition: all var(--animation-duration, 500ms) ease-in-out;\n    border: none;\n    border-radius: var(--ha-card-border-radius, 12px);\n    cursor: pointer;\n    margin: 0;\n    background: var(--ha-card-background, #1c1c1e);\n    color: var(--primary-text-color, white);\n  }\n\n  .toggle-button.off {\n    background-color: var(--ha-card-background, #1c1c1e);\n    color: var(--primary-text-color, white);\n  }\n\n  .toggle-button.on {\n    background-color: white;\n    color: black;\n  }\n\n  .toggle-text {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .room-name {\n    font-size: 1.15rem;\n    font-weight: 500;\n    margin-bottom: 4px;\n  }\n\n  .status {\n    font-size: 0.85rem;\n    opacity: 0.8;\n  }\n\n  .icon-container {\n    width: 42px;\n    height: 42px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: all var(--animation-duration, 500ms);\n  }\n\n  .off .icon-container {\n    background-color: white;\n    color: var(--ha-card-background, #1c1c1e);\n  }\n\n  .on .icon-container {\n    background-color: var(--ha-card-background, #1c1c1e);\n    color: white;\n  }\n\n  .warning {\n    display: block;\n    color: var(--error-color);\n    padding: 16px;\n  }\n\n  ha-icon {\n    --mdc-icon-size: 24px;\n  }\n`;","// editor.js\nimport { LitElement, html, css } from 'lit';\nimport { fireEvent, hasConfigOrEntityChanged } from 'custom-card-helpers';\nimport { DOMAINS } from './const';\n\nexport class BetterSwitchCardEditor extends LitElement {\n  static get properties() {\n    return {\n      hass: { type: Object },\n      _config: { type: Object },\n    };\n  }\n\n  setConfig(config) {\n    this._config = { ...config };\n  }\n\n  firstUpdated() {\n    // Ensure editor updates when config changes\n    fireEvent(this, 'config-changed', { config: this._config });\n  }\n\n  // Add shouldUpdate lifecycle method\n  shouldUpdate(changedProps) {\n    return hasConfigOrEntityChanged(this, changedProps);\n  }\n\n  get _entity() {\n    return this._config?.entity || '';\n  }\n\n  get getEntitiesInDomain() {\n    if (!this.hass) return [];\n    return Object.keys(this.hass.states).filter(\n      eid => DOMAINS.includes(eid.split('.')[0])\n    );\n  }\n\n  valueChanged(ev) {\n    if (!this._config || !this.hass) return;\n    \n    const target = ev.target;\n    if (target.configValue === undefined) return;\n\n    if (this[`_${target.configValue}`] === target.value) return;\n\n    let newValue = target.value;\n    if (target.configValue === 'animation_duration') {\n      newValue = parseInt(newValue, 10);\n    }\n\n    this._config = {\n      ...this._config,\n      [target.configValue]: newValue\n    };\n    \n    fireEvent(this, 'config-changed', { config: this._config });\n  }\n\n  render() {\n    if (!this.hass || !this._config) {\n      return html``;\n    }\n\n    const entities = this.getEntitiesInDomain;\n\n    return html`\n      <div class=\"card-config\">\n        <div class=\"overall-config\">\n          <div class=\"editor-side-by-side\">\n            <ha-entity-picker\n              .hass=${this.hass}\n              .value=${this._entity}\n              .configValue=${'entity'}\n              .includeDomains=${DOMAINS}\n              @value-changed=${this.valueChanged}\n              allow-custom-entity\n            ></ha-entity-picker>\n          </div>\n\n          <div class=\"editor-side-by-side\">\n            <ha-textfield\n              label=\"Name\"\n              .value=${this._config.name || ''}\n              .configValue=${'name'}\n              @input=${this.valueChanged}\n            ></ha-textfield>\n\n            <ha-icon-picker\n              label=\"Icon\"\n              .value=${this._config.icon || ''}\n              .configValue=${'icon'}\n              @value-changed=${this.valueChanged}\n            ></ha-icon-picker>\n          </div>\n\n          <div class=\"editor-side-by-side\">\n            <ha-textfield\n              label=\"Animation Duration (ms)\"\n              type=\"number\"\n              min=\"100\"\n              step=\"100\"\n              .value=${this._config.animation_duration || 500}\n              .configValue=${'animation_duration'}\n              @input=${this.valueChanged}\n            ></ha-textfield>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  static styles = css`\n    ha-textfield {\n      display: block;\n      margin: 8px 0;\n    }\n    \n    .editor-side-by-side {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      grid-gap: 8px;\n      margin: 8px 0;\n    }\n    \n    .card-config {\n      padding: 16px;\n    }\n  `;\n}\n\ncustomElements.define('better-switch-card-editor', BetterSwitchCardEditor);","import { LitElement, html } from 'lit';\nimport { DEFAULT_CONFIG, CARD_VERSION, CARD_NAME } from './const';\nimport { styles } from './styles';\nimport './editor';\nimport { log } from '../../shared/utils';\n\nlog.info(\n  `%c ${CARD_NAME} %c ${CARD_VERSION} `,\n  'color: white; background: #555; font-weight: 700;',\n  'color: white; background: #000; font-weight: 700;',\n);\n\nwindow.customCards = window.customCards || [];\nwindow.customCards.push({\n  type: \"better-switch-card\",\n  name: CARD_NAME,\n  description: \"A stylish switch card with animations\",\n  preview: true,\n});\n\nclass BetterSwitchCard extends LitElement {\n  static get properties() {\n    return {\n      hass: { type: Object },\n      config: { type: Object },\n    };\n  }\n\n  static get styles() {\n    return styles;\n  }\n\n  static getConfigElement() {\n    return document.createElement(\"better-switch-card-editor\");\n  }\n\n  static getStubConfig() {\n    return DEFAULT_CONFIG;\n  }\n\n  setConfig(config) {\n    if (!config.entity) {\n      throw new Error(\"Please define an entity\");\n    }\n    this.config = { ...DEFAULT_CONFIG, ...config };\n  }\n\n  _toggle(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    \n    const stateObj = this.hass.states[this.config.entity];\n    if (!stateObj) return;\n\n    const service = stateObj.state === 'on' ? 'turn_off' : 'turn_on';\n    const [domain] = this.config.entity.split('.');\n    \n    this.hass.callService(domain, service, {\n      entity_id: this.config.entity,\n    });\n  }\n\n  render() {\n    if (!this.hass || !this.config) {\n      return html``;\n    }\n\n    const stateObj = this.hass.states[this.config.entity];\n    if (!stateObj) {\n      return html`\n        <ha-card>\n          <div class=\"warning\">\n            Entity not found: ${this.config.entity}\n          </div>\n        </ha-card>\n      `;\n    }\n\n    const isOn = stateObj.state === 'on';\n    const name = this.config.name || stateObj.attributes.friendly_name;\n    const icon = this.config.icon || \n                (isOn ? 'mdi:toggle-switch' : 'mdi:toggle-switch-off');\n\n    return html`\n      <ha-card>\n        <button \n          class=\"toggle-button ${isOn ? 'on' : 'off'}\"\n          @click=\"${this._toggle}\"\n          type=\"button\"\n        >\n          <div class=\"toggle-text\">\n            <span class=\"room-name\">${name}</span>\n            <span class=\"status\">${isOn ? 'On' : 'Off'}</span>\n          </div>\n          <div class=\"icon-container\">\n            <ha-icon .icon=${icon}></ha-icon>\n          </div>\n        </button>\n      </ha-card>\n    `;\n  }\n}\n\ncustomElements.define('better-switch-card', BetterSwitchCard);\n\nexport default BetterSwitchCard;","import { log } from './shared/utils';\nimport './cards/switch';\n\nlog.info('Better Cards loaded');"],"names":["log","args","console","info","CARD_NAME","DOMAINS","DEFAULT_CONFIG","entity","name","icon","animation_duration","styles","css","BetterSwitchCardEditor","LitElement","properties","hass","type","Object","_config","setConfig","config","this","firstUpdated","fireEvent","shouldUpdate","changedProps","hasConfigOrEntityChanged","_entity","getEntitiesInDomain","keys","states","filter","eid","includes","split","valueChanged","ev","target","undefined","configValue","value","newValue","parseInt","render","html","static","customElements","define","window","customCards","push","description","preview","getConfigElement","document","createElement","getStubConfig","Error","_toggle","e","stopPropagation","preventDefault","stateObj","service","state","domain","callService","entity_id","isOn","attributes","friendly_name"],"mappings":"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"}