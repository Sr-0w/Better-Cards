{"version":3,"file":"index.js","sources":["../src/shared/utils.js","../src/cards/switch/const.js","../src/cards/switch/styles.js","../src/cards/switch/editor.js","../src/cards/switch/index.js","../src/index.js"],"sourcesContent":["// Helper for consistent logging\nexport const log = {\n  info: (...args) => console.info('[Better Cards]', ...args),\n  warn: (...args) => console.warn('[Better Cards]', ...args),\n  error: (...args) => console.error('[Better Cards]', ...args),\n};\n\n// Helper for common entity operations\nexport const entityUtils = {\n  isUnavailable: (stateObj) => !stateObj || stateObj.state === 'unavailable',\n  getName: (stateObj, config) => config.name || stateObj.attributes.friendly_name,\n  getIcon: (stateObj, config) => config.icon || stateObj.attributes.icon\n};\n\n// Error handling\nexport const throwError = (message) => {\n  throw new Error(`[Better Cards] ${message}`);\n};\n","export const CARD_VERSION = '1.0.0';\nexport const CARD_NAME = 'Better Switch Card';\nexport const DOMAINS = ['switch', 'light', 'input_boolean'];\n\nexport const DEFAULT_CONFIG = {\n  entity: '',\n  name: '',\n  icon: '',\n  animation_duration: 500,\n};","import { css } from 'lit';\n\nexport const styles = css`\n  :host {\n    display: block;\n    height: 100%;\n  }\n\n  ha-card {\n    height: 100%;\n  }\n\n  .toggle-button {\n    width: 100%;\n    height: 100%;\n    min-height: 48px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 16px;\n    transition: all var(--animation-duration, 500ms) ease-in-out;\n    border: none;\n    border-radius: var(--ha-card-border-radius, 12px);\n    cursor: pointer;\n    margin: 0;\n    background: var(--ha-card-background, #1c1c1e);\n    color: var(--primary-text-color, white);\n  }\n\n  .toggle-button.off {\n    background-color: var(--ha-card-background, #1c1c1e);\n    color: var(--primary-text-color, white);\n  }\n\n  .toggle-button.on {\n    background-color: white;\n    color: black;\n  }\n\n  .toggle-text {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .room-name {\n    font-size: 1.15rem;\n    font-weight: 500;\n    margin-bottom: 4px;\n  }\n\n  .status {\n    font-size: 0.85rem;\n    opacity: 0.8;\n  }\n\n  .icon-container {\n    width: 42px;\n    height: 42px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: all var(--animation-duration, 500ms);\n  }\n\n  .off .icon-container {\n    background-color: white;\n    color: var(--ha-card-background, #1c1c1e);\n  }\n\n  .on .icon-container {\n    background-color: var(--ha-card-background, #1c1c1e);\n    color: white;\n  }\n\n  .warning {\n    display: block;\n    color: var(--error-color);\n    padding: 16px;\n  }\n\n  ha-icon {\n    --mdc-icon-size: 24px;\n  }\n`;","import { html, LitElement, css } from \"lit\";\nimport { fireEvent } from \"custom-card-helpers\";\nimport { DOMAINS } from \"./const\";\n\nexport class BetterSwitchCardEditor extends LitElement {\n  static get properties() {\n    return {\n      hass: { type: Object },\n      _config: { type: Object },\n    };\n  }\n\n  static get styles() {\n    return css`\n      .card-config {\n        padding: 16px;\n      }\n      ha-textfield {\n        display: block;\n        margin: 8px 0;\n      }\n      ha-entity-picker {\n        display: block;\n        margin: 8px 0;\n      }\n      ha-icon-picker {\n        display: block;\n        margin: 8px 0;\n      }\n    `;\n  }\n\n  setConfig(config) {\n    this._config = config;\n  }\n\n  _computeLabel(schema) {\n    const labels = {\n      entity: \"Entity (Required)\",\n      name: \"Name (Optional)\",\n      icon: \"Icon\",\n      animation_duration: \"Animation Duration (ms)\",\n    };\n    return labels[schema.name] || schema.name;\n  }\n\n  get _entity() {\n    return this._config.entity || \"\";\n  }\n\n  get _name() {\n    return this._config.name || \"\";\n  }\n\n  get _icon() {\n    return this._config.icon || \"\";\n  }\n\n  get _animation_duration() {\n    return this._config.animation_duration || 500;\n  }\n\n  _valueChanged(ev) {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    \n    const target = ev.target;\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n\n    let newValue = ev.detail?.value || target.value;\n    if (target.configValue === 'animation_duration') {\n      newValue = parseInt(newValue);\n    }\n\n    const newConfig = {\n      ...this._config,\n      [target.configValue]: newValue\n    };\n    \n    fireEvent(this, \"config-changed\", { config: newConfig });\n  }\n\n  render() {\n    if (!this.hass || !this._config) {\n      return html``;\n    }\n\n    return html`\n      <div class=\"card-config\">\n        <ha-entity-picker\n          .label=\"${this._computeLabel({ name: 'entity' })}\"\n          .hass=${this.hass}\n          .value=${this._entity}\n          .configValue=${\"entity\"}\n          .includeDomains=${DOMAINS}\n          @value-changed=${this._valueChanged}\n          allow-custom-entity\n        ></ha-entity-picker>\n        <ha-textfield\n          label=\"${this._computeLabel({ name: 'name' })}\"\n          .value=${this._name}\n          .configValue=${\"name\"}\n          @input=${this._valueChanged}\n        ></ha-textfield>\n        <ha-icon-picker\n          label=\"${this._computeLabel({ name: 'icon' })}\"\n          .value=${this._icon}\n          .configValue=${\"icon\"}\n          @value-changed=${this._valueChanged}\n        ></ha-icon-picker>\n        <ha-textfield\n          label=\"${this._computeLabel({ name: 'animation_duration' })}\"\n          type=\"number\"\n          .value=${this._animation_duration}\n          .configValue=${\"animation_duration\"}\n          @input=${this._valueChanged}\n        ></ha-textfield>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define(\"better-switch-card-editor\", BetterSwitchCardEditor);","import { LitElement, html } from 'lit';\nimport { DEFAULT_CONFIG, CARD_VERSION, CARD_NAME } from './const';\nimport { styles } from './styles';\nimport './editor';\nimport { log } from '../../shared/utils';\n\nlog.info(\n  `%c ${CARD_NAME} %c ${CARD_VERSION} `,\n  'color: white; background: #555; font-weight: 700;',\n  'color: white; background: #000; font-weight: 700;',\n);\n\nwindow.customCards = window.customCards || [];\nwindow.customCards.push({\n  type: \"better-switch-card\",\n  name: CARD_NAME,\n  description: \"A stylish switch card with animations\",\n  preview: true,\n});\n\nclass BetterSwitchCard extends LitElement {\n  static get properties() {\n    return {\n      hass: { type: Object },\n      config: { type: Object },\n    };\n  }\n\n  static get styles() {\n    return styles;\n  }\n\n  static getConfigElement() {\n    return document.createElement(\"better-switch-card-editor\");\n  }\n\n  static getStubConfig() {\n    return DEFAULT_CONFIG;\n  }\n\n  setConfig(config) {\n    if (!config.entity) {\n      throw new Error(\"Please define an entity\");\n    }\n    this.config = { ...DEFAULT_CONFIG, ...config };\n  }\n\n  _toggle(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    \n    const stateObj = this.hass.states[this.config.entity];\n    if (!stateObj) return;\n\n    const service = stateObj.state === 'on' ? 'turn_off' : 'turn_on';\n    const [domain] = this.config.entity.split('.');\n    \n    this.hass.callService(domain, service, {\n      entity_id: this.config.entity,\n    });\n  }\n\n  render() {\n    if (!this.hass || !this.config) {\n      return html``;\n    }\n\n    const stateObj = this.hass.states[this.config.entity];\n    if (!stateObj) {\n      return html`\n        <ha-card>\n          <div class=\"warning\">\n            Entity not found: ${this.config.entity}\n          </div>\n        </ha-card>\n      `;\n    }\n\n    const isOn = stateObj.state === 'on';\n    const name = this.config.name || stateObj.attributes.friendly_name;\n    const icon = this.config.icon || \n                (isOn ? 'mdi:toggle-switch' : 'mdi:toggle-switch-off');\n\n    return html`\n      <ha-card>\n        <button \n          class=\"toggle-button ${isOn ? 'on' : 'off'}\"\n          @click=\"${this._toggle}\"\n          type=\"button\"\n        >\n          <div class=\"toggle-text\">\n            <span class=\"room-name\">${name}</span>\n            <span class=\"status\">${isOn ? 'On' : 'Off'}</span>\n          </div>\n          <div class=\"icon-container\">\n            <ha-icon .icon=${icon}></ha-icon>\n          </div>\n        </button>\n      </ha-card>\n    `;\n  }\n}\n\ncustomElements.define('better-switch-card', BetterSwitchCard);\n\nexport default BetterSwitchCard;","import { log } from './shared/utils';\nimport './cards/switch';\n\nlog.info('Better Cards loaded');"],"names":["log","args","console","info","CARD_NAME","DOMAINS","DEFAULT_CONFIG","entity","name","icon","animation_duration","styles","css","customElements","define","LitElement","properties","hass","type","Object","_config","setConfig","config","this","_computeLabel","schema","_entity","_name","_icon","_animation_duration","_valueChanged","ev","target","configValue","value","newValue","detail","parseInt","newConfig","fireEvent","render","html","window","customCards","push","description","preview","getConfigElement","document","createElement","getStubConfig","Error","_toggle","e","stopPropagation","preventDefault","stateObj","states","service","state","domain","split","callService","entity_id","isOn","attributes","friendly_name"],"mappings":"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"}