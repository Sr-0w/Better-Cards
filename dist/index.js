import{css as n,LitElement as t,html as e}from"lit";import{fireEvent as i}from"custom-card-helpers";var r=function(){for(var n=arguments.length,t=new Array(n),e=0;e<n;e++)t[e]=arguments[e];return console.info("[Better Cards]",...t)};function o(n,t,e,i,r,o,a){try{var c=n[o](a),s=c.value}catch(n){return void e(n)}c.done?t(s):Promise.resolve(s).then(i,r)}function a(n,t,e){return(t=function(n){var t=function(n,t){if("object"!=typeof n||!n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var i=e.call(n,t||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(n)}(n,"string");return"symbol"==typeof t?t:t+""}(t))in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function c(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,i)}return e}function s(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?c(Object(e),!0).forEach((function(t){a(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):c(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function l(n,t){return t||(t=n.slice(0)),Object.freeze(Object.defineProperties(n,{raw:{value:Object.freeze(t)}}))}var d,u,h,f,g="Better Switch Card",p=["switch","light","input_boolean"],v={entity:"",name:"",icon:"",animation_duration:500},m=n(d||(d=l(["\n  :host {\n    display: block;\n    height: 100%;\n  }\n\n  ha-card {\n    height: 100%;\n  }\n\n  .toggle-button {\n    width: 100%;\n    height: 100%;\n    min-height: 48px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 16px;\n    transition: all var(--animation-duration, 500ms) ease-in-out;\n    border: none;\n    border-radius: var(--ha-card-border-radius, 12px);\n    cursor: pointer;\n    margin: 0;\n    background: var(--ha-card-background, #1c1c1e);\n    color: var(--primary-text-color, white);\n  }\n\n  .toggle-button.off {\n    background-color: var(--ha-card-background, #1c1c1e);\n    color: var(--primary-text-color, white);\n  }\n\n  .toggle-button.on {\n    background-color: white;\n    color: black;\n  }\n\n  .toggle-text {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .room-name {\n    font-size: 1.15rem;\n    font-weight: 500;\n    margin-bottom: 4px;\n  }\n\n  .status {\n    font-size: 0.85rem;\n    opacity: 0.8;\n  }\n\n  .icon-container {\n    width: 42px;\n    height: 42px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: all var(--animation-duration, 500ms);\n  }\n\n  .off .icon-container {\n    background-color: white;\n    color: var(--ha-card-background, #1c1c1e);\n  }\n\n  .on .icon-container {\n    background-color: var(--ha-card-background, #1c1c1e);\n    color: white;\n  }\n\n  .warning {\n    display: block;\n    color: var(--error-color);\n    padding: 16px;\n  }\n\n  ha-icon {\n    --mdc-icon-size: 24px;\n  }\n"])));class b extends t{static get properties(){return{hass:{type:Object},_config:{type:Object}}}setConfig(n){this._config=s({},n)}firstUpdated(){customElements.whenDefined("ha-entity-picker").then((()=>{this.requestUpdate()}))}get _entity(){var n;return(null===(n=this._config)||void 0===n?void 0:n.entity)||""}get _name(){var n;return(null===(n=this._config)||void 0===n?void 0:n.name)||""}get _icon(){var n;return(null===(n=this._config)||void 0===n?void 0:n.icon)||""}get _animation_duration(){var n;return(null===(n=this._config)||void 0===n?void 0:n.animation_duration)||500}valueChanged(n){var t,e;if(this._config&&this.hass){var r=n.target,o=null!==(t=null===(e=n.detail)||void 0===e?void 0:e.value)&&void 0!==t?t:r.value,a=r.configValue;if(a){var c=s(s({},this._config),{},{[a]:o});"animation_duration"===a&&(c[a]=parseInt(o,10)||500),i(this,"config-changed",{config:c})}}}render(){return this._config&&this.hass?e(h||(h=l(['\n      <div class="card-config">\n        <div class="side-by-side">\n          <ha-entity-picker\n            .hass=',"\n            .value=","\n            .configValue=","\n            .includeDomains=","\n            @value-changed=",'\n            allow-custom-entity\n          ></ha-entity-picker>\n        </div>\n\n        <div class="side-by-side">\n          <ha-textfield\n            label="Name"\n            .value=',"\n            .configValue=","\n            @input=",'\n          ></ha-textfield>\n          \n          <ha-icon-picker\n            label="Icon"\n            .value=',"\n            .configValue=","\n            @value-changed=",'\n          ></ha-icon-picker>\n        </div>\n\n        <div class="side-by-side">\n          <ha-textfield\n            label="Animation Duration (ms)"\n            type="number"\n            min="100"\n            step="100"\n            .value=',"\n            .configValue=","\n            @input=","\n          ></ha-textfield>\n        </div>\n      </div>\n    "])),this.hass,this._entity,"entity",p,this.valueChanged,this._name,"name",this.valueChanged,this._icon,"icon",this.valueChanged,this._animation_duration,"animation_duration",this.valueChanged):e(u||(u=l([""])))}static get styles(){return n(f||(f=l(["\n      .card-config {\n        padding: 16px;\n      }\n      .side-by-side {\n        display: flex;\n        align-items: center;\n        gap: 8px;\n        margin: 8px 0;\n      }\n      ha-entity-picker,\n      ha-textfield {\n        width: 100%;\n      }\n    "])))}}customElements.define("better-switch-card-editor",b);var y,w,_,x=Object.freeze({__proto__:null,BetterSwitchCardEditor:b});console.info("%c ".concat(g," %c ").concat("1.0.0"," "),"color: white; background: #555; font-weight: 700;","color: white; background: #000; font-weight: 700;"),window.customCards=window.customCards||[],window.customCards.push({type:"better-switch-card",name:g,description:"A stylish switch card with animations",preview:!0});customElements.define("better-switch-card",class extends t{static get properties(){return{hass:{type:Object},config:{type:Object}}}static get styles(){return m}static getConfigElement(){return(n=function*(){return yield Promise.resolve().then((function(){return x})),document.createElement("better-switch-card-editor")},function(){var t=this,e=arguments;return new Promise((function(i,r){var a=n.apply(t,e);function c(n){o(a,i,r,c,s,"next",n)}function s(n){o(a,i,r,c,s,"throw",n)}c(void 0)}))})();var n}static getStubConfig(){return{entity:"",name:"",icon:"",animation_duration:500}}setConfig(n){if(!n.entity)throw new Error("Please define an entity");this.config=s(s({},v),n)}_toggle(n){n.stopPropagation(),n.preventDefault();var t=this.hass.states[this.config.entity];if(t){var e="on"===t.state?"turn_off":"turn_on",[i]=this.config.entity.split(".");this.hass.callService(i,e,{entity_id:this.config.entity})}}render(){if(!this.hass||!this.config)return e(y||(y=l([""])));var n=this.hass.states[this.config.entity];if(!n)return e(w||(w=l(['\n        <ha-card>\n          <div class="warning">\n            Entity not found: ',"\n          </div>\n        </ha-card>\n      "])),this.config.entity);var t="on"===n.state,i=this.config.name||n.attributes.friendly_name,r=this.config.icon||(t?"mdi:toggle-switch":"mdi:toggle-switch-off");return e(_||(_=l(['\n      <ha-card>\n        <button \n          class="toggle-button ','"\n          @click="','"\n          type="button"\n          style="--animation-duration: ','ms"\n        >\n          <div class="toggle-text">\n            <span class="room-name">','</span>\n            <span class="status">','</span>\n          </div>\n          <div class="icon-container">\n            <ha-icon .icon=',"></ha-icon>\n          </div>\n        </button>\n      </ha-card>\n    "])),t?"on":"off",this._toggle,this.config.animation_duration,i,t?"On":"Off",r)}}),r("Better Cards loaded");
//# sourceMappingURL=index.js.map
